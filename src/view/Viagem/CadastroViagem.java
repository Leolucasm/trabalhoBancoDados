package view.Viagem;

import control.Funcoes;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import model.Lance;
import model.Viagem;

public class CadastroViagem extends javax.swing.JFrame {

    Viagem viagem = new Viagem();

    public CadastroViagem() {
        initComponents();
        URL url = this.getClass().getResource("/arquivos/Icone.jpg");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);

        montaCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxEmbarcacao = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxPortoSaida = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxPortoChegada = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextDataSaida = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jTextDataChegada = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        btGravar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLances = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButtonInserirFotografia = new javax.swing.JButton();
        jButtonRemoverFotografia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Viagem");
        setMaximumSize(new java.awt.Dimension(807, 707));
        setMinimumSize(new java.awt.Dimension(807, 707));
        setPreferredSize(new java.awt.Dimension(807, 707));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações Gerais"));
        jPanel1.setPreferredSize(new java.awt.Dimension(695, 235));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setMaximumSize(new java.awt.Dimension(342, 192));
        jPanel5.setMinimumSize(new java.awt.Dimension(342, 192));

        jLabel1.setText("Embarcação");

        jComboBoxEmbarcacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Porto de Saída");

        jComboBoxPortoSaida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Porto de Chegada");

        jComboBoxPortoChegada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Data de Saída");

        jTextDataSaida.setModel(new javax.swing.SpinnerDateModel());

        jLabel7.setText("Data de Chegada");

        jTextDataChegada.setModel(new javax.swing.SpinnerDateModel());

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEmbarcacao, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPortoSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPortoChegada, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel7))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jTextDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jTextDataChegada, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(382, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(jComboBoxEmbarcacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel4)
                .addGap(3, 3, 3)
                .addComponent(jComboBoxPortoSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addComponent(jComboBoxPortoChegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(1, 1, 1)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextDataChegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 36, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btGravar.setText("Gravar");
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });
        jPanel2.add(btGravar);

        btCancelar.setText("Cancelar");
        btCancelar.setToolTipText("");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btCancelar);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Lances"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jTableLances.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Hora Inicial", "Hora Final", "Capturas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLances.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLancesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLances);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.setPreferredSize(new java.awt.Dimension(100, 200));

        jButtonInserirFotografia.setText("Inserir");
        jButtonInserirFotografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirFotografiaActionPerformed(evt);
            }
        });

        jButtonRemoverFotografia.setText("Remover");
        jButtonRemoverFotografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverFotografiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonRemoverFotografia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonInserirFotografia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jButtonInserirFotografia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoverFotografia)
                .addContainerGap(266, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4, java.awt.BorderLayout.WEST);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        try {
            if (valida()) {

                /*--------------------------------------------------------------
                                Pegando o id dos campos                
                --------------------------------------------------------------*/
                DefaultTableModel model = Funcoes.getPortos("nome = '" + jComboBoxPortoSaida.getItemAt(jComboBoxPortoSaida.getSelectedIndex()) + "'");
                int porto_saida = Integer.parseInt((String) model.getValueAt(0, 0));

                model = Funcoes.getPortos("nome = '" + jComboBoxPortoChegada.getItemAt(jComboBoxPortoChegada.getSelectedIndex()) + "'");
                int porto_chegada = Integer.parseInt((String) model.getValueAt(0, 0));

                model = Funcoes.getEmbarcacoes("nome = '" + jComboBoxEmbarcacao.getItemAt(jComboBoxEmbarcacao.getSelectedIndex()) + "'");
                int embarcacao = Integer.parseInt((String) model.getValueAt(0, 0));

                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                java.util.Date data_formatada;

                /*--------------------------------------------------------------
                                Formatando as Datas
                --------------------------------------------------------------*/
                data_formatada = formato.parse(Funcoes.dataSQL((SpinnerDateModel) jTextDataSaida.getModel()));
                java.sql.Date data_saida = new java.sql.Date(data_formatada.getTime());

                data_formatada = formato.parse(Funcoes.dataSQL((SpinnerDateModel) jTextDataChegada.getModel()));
                java.sql.Date data_chegada = new java.sql.Date(data_formatada.getTime());

                viagem.setEmbarcacao_id(embarcacao);
                viagem.setId_porto_saida(porto_saida);
                viagem.setId_porto_chegada(porto_chegada);
                viagem.setData_saida(data_saida);
                viagem.setData_chegada(data_chegada);

                viagem.save();
                limparCampos();
                JOptionPane.showMessageDialog(null, "Viagem cadastrada com sucesso!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Houve um erro ao executar o comando! \n Mensagem: " + ex.getMessage());
        }
    }//GEN-LAST:event_btGravarActionPerformed

    private boolean valida() throws Exception {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        java.util.Date data_saida = formato.parse(Funcoes.dataSQL((SpinnerDateModel) jTextDataSaida.getModel()));
        java.util.Date data_chegada = formato.parse(Funcoes.dataSQL((SpinnerDateModel) jTextDataChegada.getModel()));

        if (data_chegada.before(data_saida)) {
            throw new Exception("A data de chegada deve ser posterior à de saída.");
        }

        if (jComboBoxPortoSaida.getSelectedIndex() == jComboBoxPortoChegada.getSelectedIndex()) {
            throw new Exception("Porto de saída e chegada devem ser diferentes.");
        }

        if (viagem.getQuantidadeLances() <= 0) {
            throw new Exception("Ao menos um lance deve ser cadastrado.");
        }

        return true;
    }

    private void jTableLancesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLancesMouseClicked

        if (evt.getClickCount() == 2) {
            //
        }
    }//GEN-LAST:event_jTableLancesMouseClicked

    private void jButtonInserirFotografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirFotografiaActionPerformed
        try {
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date data_saida = formato.parse(Funcoes.dataSQL((SpinnerDateModel) jTextDataSaida.getModel()));
            java.util.Date data_chegada = formato.parse(Funcoes.dataSQL((SpinnerDateModel) jTextDataChegada.getModel()));

            CadastroLance cadastroLance = new CadastroLance(data_saida, data_chegada);
            cadastroLance.setVisible(true);

            cadastroLance.addWindowListener(new WindowAdapter() {

                @Override
                public void windowClosed(WindowEvent we) {
                    Lance lance = cadastroLance.getLance();

                    if (lance.getAltura_rede() > 0) {
                        viagem.inserirLances(lance);

                        //Insere na lista
                        DefaultTableModel model = (DefaultTableModel) jTableLances.getModel();
                        model.addRow(new Object[]{Funcoes.formataData(lance.getData()), lance.getHora_inicial(), lance.getHora_final(), lance.getQuantidadeCapturas()});
                        jTableLances.setModel(model);
                    }
                }

            });
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Verifique se as datas de saída e chegada estão preenchidas corretamente!");
        }
    }//GEN-LAST:event_jButtonInserirFotografiaActionPerformed

    private void jButtonRemoverFotografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverFotografiaActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableLances.getModel();
        viagem.removerLances(jTableLances.getSelectedRow());
        model.removeRow(jTableLances.getSelectedRow());
        jTableLances.setModel(model);
    }//GEN-LAST:event_jButtonRemoverFotografiaActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void montaCampos() {
        try {
            DefaultTableModel model_portos = Funcoes.getPortos("");
            DefaultTableModel model_embarcacoes = Funcoes.getEmbarcacoes("");
            jComboBoxEmbarcacao.removeAllItems();
            jComboBoxPortoChegada.removeAllItems();
            jComboBoxPortoSaida.removeAllItems();

            for (int i = 0; i < model_embarcacoes.getRowCount(); i++) {
                jComboBoxEmbarcacao.addItem((String) model_embarcacoes.getValueAt(i, 1));
            }

            for (int i = 0; i < model_portos.getRowCount(); i++) {
                jComboBoxPortoSaida.addItem((String) model_portos.getValueAt(i, 1));
                jComboBoxPortoChegada.addItem((String) model_portos.getValueAt(i, 1));
            }

            JSpinner.DateEditor data_saida_editor = new JSpinner.DateEditor(jTextDataSaida, "dd/MM/yyyy");
            jTextDataSaida.setEditor(data_saida_editor);

            JSpinner.DateEditor data_chegada_editor = new JSpinner.DateEditor(jTextDataChegada, "dd/MM/yyyy");
            jTextDataChegada.setEditor(data_chegada_editor);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar as informações! \nVerifique: " + ex.getMessage());
        }
    }

    private void limparCampos() {
        montaCampos();

        DefaultTableModel model = (DefaultTableModel) jTableLances.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.removeRow(0);
        }        
        jTableLances.setModel(model);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroViagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroViagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroViagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroViagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroViagem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton jButtonInserirFotografia;
    private javax.swing.JButton jButtonRemoverFotografia;
    private javax.swing.JComboBox<String> jComboBoxEmbarcacao;
    private javax.swing.JComboBox<String> jComboBoxPortoChegada;
    private javax.swing.JComboBox<String> jComboBoxPortoSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLances;
    private javax.swing.JSpinner jTextDataChegada;
    private javax.swing.JSpinner jTextDataSaida;
    // End of variables declaration//GEN-END:variables
}
